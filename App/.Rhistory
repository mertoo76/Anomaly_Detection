# Clear the workspace
rm( list = ls() )
data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../../../Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
View(data)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
View(colnames)
View(data)
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
View(x_prep)
x_prep[1:10,1:4]
t=seq(0,(10*2)-2,2)
res <- emd(xt=x, tt=t, max.imf = 1)
res <- emd(xt=x_prep[1:10,1:4], tt=t, max.imf = 1)
tryCatch( { res <- emd(xt=x_prep[1:10,1:4], tt=t, max.imf = 1) }
, error = function(e) {an.error.occured <<- TRUE})
i=1
((i-1)*10+1)
res <- emd(xt=x_prep[((i-1)*10+1):(i*10),1:4], tt=t, max.imf = 1)
i=2
res <- emd(xt=x_prep[((i-1)*10+1):(i*10),1:4], tt=t, max.imf = 1)
i=5
res <- emd(xt=x_prep[((i-1)*10+1):(i*10),1:4], tt=t, max.imf = 1)
i=100
res <- emd(xt=x_prep[((i-1)*10+1):(i*10),1:4], tt=t, max.imf = 1)
i=100
res <- emd(xt=x_prep[((i-1)*20+1):(i*20),1:4], tt=t, max.imf = 1)
i=100
res <- emd(xt=x_prep[((i-1)*100+1):(i*100),1:4], tt=t, max.imf = 1)
i=1
res <- emd(xt=x_prep[((i-1)*100+1):(i*100),1:4], tt=t, max.imf = 1)
x_prep[((i-1)*100+1):(i*100),1:4]
.libPaths()
# Clear the workspace
rm( list = ls() )
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/kddcup.data_10_percent_corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
x_prep[1:10,1:4]
t=seq(0,(10*2)-2,2)
i=1
res <- emd(xt=x_prep[((i-1)*10+1):(i*10),1:4], tt=t, max.imf = 1)
t=seq(0,(20*2)-2,2)
i=1
res <- emd(xt=x_prep[((i-1)*20+1):(i*20),1:4], tt=t, max.imf = 1)
t=seq(0,(100*2)-2,2)
i=1
res <- emd(xt=x_prep[((i-1)*100+1):(i*100),1:4], tt=t, max.imf = 1)
i=2
res <- emd(xt=x_prep[((i-1)*100+1):(i*100),1:4], tt=t, max.imf = 1)
i=3
res <- emd(xt=x_prep[((i-1)*100+1):(i*100),1:4], tt=t, max.imf = 1)
i=1
s=x_prep[((i*100)+1):(100*(i+1)),j]
#print("x1")
t=seq(100*i*2,(100*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
s=x_prep[((i*100)+1):(100*(i+1)),j]
i=1
j=1
s=x_prep[((i*100)+1):(100*(i+1)),j]
#print("x1")
t=seq(100*i*2,(100*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=1
s=x_prep[((i*100)+1):(100*(i+1)),j]
#print("x1")
t=seq(100*i*2,(100*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=1
s=x_prep[((i*100)+1):(100*(i+1)),1:4]
#print("x1")
t=seq(100*i*2,(100*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
rm( list = ls() )
x=matrix(0L, nrow=10, 4)
for(i in  1:ncol(x)){
print(i)
}
an.error.occured <<- FALSE
library(EMD)
library(data.table)
library(dplyr)
library(RcppCNPy)
# Clear the workspace
rm( list = ls() )
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/kddcup.data_10_percent_corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
x_prep[1:10,1:4]
t=seq(0,(100*2)-2,2)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=2
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
View(data)
View(x_prep)
res$imf==NULL
x=matrix(0L, nrow=10, 4)
x=res$imf
if (res$imf==NULL){
print("s")
}
if (length(res$imf)==NULL){
print("s")
}
if (length(res$imf)==0){
print("s")
}
res$imf=matrix(0L, nrow=10, 4)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
typeof(res$imf)
res$imf=rep(0, 10)
mat=matrix(0L, nrow=10, 8)
mat[1:10,((i*2)-1)]=res$imf
View(mat)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
mat[1:10,((i*2)-1)]=res$imf
View(mat)
res$imf=rep(0, 10)
mat[1:10,((i*2)-1)]=res$imf
rm( list = ls() )
library(EMD)
library(data.table)
library(dplyr)
library(RcppCNPy)
# Clear the workspace
rm( list = ls() )
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/kddcup.data_10_percent_corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
x_prep[1:10,1:4]
t=seq(0,(100*2)-2,2)
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
x=x_prep[((i*10)+1):(10*(i+1)),1:4]
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e) {mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
# Clear the workspace
rm( list = ls() )
# Clear the workspace
rm( list = ls() )
# Clear the workspace
rm( list = ls() )
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/kddcup.data_10_percent_corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
x_prep[1:10,1:4]
t=seq(0,(100*2)-2,2)
i=1
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
x=x_prep[((i*10)+1):(10*(i+1)),1:4]
View(x)
x=as.matrix(x)
View(x)
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e) {mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i,mat) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i,mat) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
mat<<-matrix(0L, nrow=10, 8)
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
View(x)
View(mat)
View(x)
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
x=x_prep[((i*10)+1):(10*(i+1)),1:4]
for(i in  1:ncol(x)){
tryCatch( { res <- emd(xt=x[1:10,i], tt=t, max.imf = 1)
if (length(res$imf)==0){
res$imf=rep(0, 10)
}
mat[1:10,(i*2)]=res$residue
mat[1:10,((i*2)-1)]=res$imf
}
, error = function(e,i) {mat[1:10,(i*2)]=x[1:10,i]
mat[1:10,((i*2)-1)]=rep(0, 10)
})
}
View(mat)
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
View(mat)
i=0
j=2
s=x_prep[((i*10)+1):(10*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=3
s=x_prep[((i*10)+1):(10*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=3
s=x_prep[((i*100)+1):(100*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(100*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
View(mat)
View(mat)
i=0
j=3
s=x_prep[((i*20)+1):(20*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(20*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
View(x_prep)
View(x)
# Clear the workspace
rm( list = ls() )
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
x_prep[1:10,1:4]
t=seq(0,(100*2)-2,2)
i=0
j=3
s=x_prep[((i*20)+1):(20*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(20*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=1
s=x_prep[((i*20)+1):(20*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(20*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
i=0
j=1
s=x_prep[((i*10)+1):(10*(i+1)),j]
#x=x_prep[((i*10)+1):(10*(i+1)),1:4]
#print("x1")
t=seq(10*i*2,(10*(i+1)*2)-2,2)
#print("x2")
res <- emd(xt=s,
tt=t, max.imf = 1)
print("R:",x)
print("R:",x_prep)
print("R:"+ x_prep)
print("R:")
print(x_prep)
View(data)
View(x_prep)
#data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
data<-read.csv("../New/KDD10Percentage/Data/corrected", stringsAsFactors = FALSE)
# Process the data
colnames <- read.table("../New/KDD10Percentage/Data/kddcup.names", skip = 1, sep = ":")
names(data) <- colnames$V1
d <- dim(data)
names(data)[d[2]] <- "label"
#get 4 time-series data
x_prep=select(data, count, srv_count, dst_host_count, dst_host_srv_count)
x_prep=as.matrix(x_prep)
View(x_prep)
View(x_prep)
